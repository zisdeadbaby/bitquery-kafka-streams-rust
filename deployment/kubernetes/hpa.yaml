apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bitquery-kafka-hpa
  namespace: bitquery
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bitquery-kafka-consumer
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: kafka_consumer_lag
      target:
        type: AverageValue
        averageValue: "5000"  # Scale up if lag > 5k per pod
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 60

---
apiVersion: v1
kind: PodDisruptionBudget
metadata:
  name: bitquery-kafka-pdb
  namespace: bitquery
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: bitquery-kafka-consumer

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: bitquery-kafka-netpol
  namespace: bitquery
spec:
  podSelector:
    matchLabels:
      app: bitquery-kafka-consumer
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  egress:
  - {} # Allow all egress for Kafka connections
