[package]
name = "zola-streams"
version = "2.0.0"
edition = "2021"
authors = ["Zola Team"]
description = "High-performance Kafka streaming client for Bitquery Solana data with enhanced features"
license = "MIT OR Apache-2.0"
repository = "https://github.com/zola/zola-streams"
keywords = ["blockchain", "solana", "kafka", "streaming", "bitquery"]
categories = ["api-bindings", "asynchronous", "network-programming"]

[workspace]
resolver = "2"
members = [
    ".",
    "tools"
]

# Shared workspace dependencies to ensure version consistency
[workspace.dependencies]
# Kafka
rdkafka = { version = "0.36", features = ["cmake-build", "ssl", "sasl"] }

# Async runtime
tokio = { version = "1.39", features = ["full"] }
tokio-stream = "0.1"
futures = "0.3"
async-trait = "0.1"
async-channel = "2.3"

# Protobuf
prost = "0.13"
prost-types = "0.13"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bytes = "1.7"

# Compression
lz4_flex = "0.11"

# Encoding
bs58 = "0.5"
hex = "0.4"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Utilities
dashmap = "6.0"
lru = "0.12"
chrono = { version = "0.4", features = ["serde"] }
once_cell = "1.19"
parking_lot = "0.12"
uuid = { version = "1.10.0", features = ["v4"] }

# CLI
clap = { version = "4.5", features = ["derive"] }

# Logging and metrics
tracing = "0.1"
metrics = "0.23"

# Optional dependencies
jemallocator = "0.5"

# Build dependencies
prost-build = "0.13"

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
# Kafka
rdkafka = { workspace = true }

# Async runtime
tokio = { workspace = true }
tokio-stream = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }
async-channel = { workspace = true }

# Protobuf
prost = { workspace = true }
prost-types = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
bytes = { workspace = true }

# Compression (from core)
lz4_flex = { workspace = true }
flate2 = "1.0"

# Encoding
bs58 = { workspace = true }
hex = { workspace = true }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }
crossbeam-channel = "0.5"

# Utilities
chrono = { workspace = true }
once_cell = { workspace = true }
parking_lot = { workspace = true }
uuid = { workspace = true }
lru = { workspace = true }
num_cpus = "1.16"

# CLI
clap = { version = "4.5", features = ["derive"] }

# Logging
tracing = { workspace = true }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "fmt", "std"] }

# Metrics
metrics = { workspace = true }
metrics-exporter-prometheus = "0.15"

# HTTP server for health/metrics endpoints
warp = "0.3"
axum = "0.7"
tower = "0.4"

# Additional core dependencies
fastrand = "2.0"

# Health monitoring
sysinfo = "0.31"

# Optional high-performance allocator
jemallocator = { workspace = true, optional = true }

[dev-dependencies]
num_cpus = "1.16"
mockall = "0.12"
tokio-test = "0.4"
criterion = "0.5"
tempfile = "3.8"

[features]
default = []
high-performance = ["jemallocator"]
metrics = []

[build-dependencies]
prost-build = { workspace = true }

[[example]]
name = "basic_consumer"
path = "examples/basic_consumer.rs"

[[example]]
name = "connection_test"
path = "examples/connection_test.rs"

[[example]]
name = "direct_connection_test"
path = "examples/direct_connection_test.rs"

[[example]]
name = "dex_trading_bot"
path = "examples/dex_trading_bot.rs"

[[example]]
name = "high_volume_processor"
path = "examples/high_volume_processor.rs"

[[example]]
name = "health_check"
path = "examples/health_check.rs"
