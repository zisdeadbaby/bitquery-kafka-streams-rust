# Development Dockerfile
# Optimized for development with faster builds and debugging capabilities

FROM rust:1.82-bullseye as builder

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libsasl2-dev \
    libzstd-dev \
    cmake \
    && rm -rf /var/lib/apt/lists/*

# Copy dependency files
COPY Cargo.toml Cargo.lock ./
COPY core/Cargo.toml ./core/
COPY tools/Cargo.toml ./tools/

# Build dependencies (cached layer)
RUN mkdir -p src core/src tools/src && \
    echo "fn main() {}" > src/main.rs && \
    echo "fn main() {}" > core/src/lib.rs && \
    echo "fn main() {}" > tools/src/lib.rs && \
    cargo build --release && \
    rm -rf src core/src tools/src

# Copy source code
COPY . .

# Build application with development optimizations
RUN cargo build --release

# Runtime stage
FROM debian:bullseye-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl1.1 \
    libsasl2-2 \
    libzstd1 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy binary and config
COPY --from=builder /app/target/release/zola-streams /usr/local/bin/
COPY --from=builder /app/config/ ./config/

# Create non-root user
RUN useradd -r -s /bin/false appuser && \
    chown -R appuser:appuser /app

USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

EXPOSE 8080 9090

CMD ["zola-streams"]
