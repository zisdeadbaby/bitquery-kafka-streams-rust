version: '3.8'

services:
  bitquery-kafka:
    build: .
    image: bitquery-solana-kafka:latest
    container_name: bitquery-kafka-production
    restart: unless-stopped
    
    ports:
      - "8080:8080"   # Health check endpoint
      - "9090:9090"   # Prometheus metrics
    
    environment:
      - HEALTH_CHECK_PORT=8080
      - PROMETHEUS_PORT=9090
      - RUST_LOG=info,bitquery_solana_kafka=debug
      - KAFKA_GROUP_ID=solana_113-dex-monitor-prod-01
    
    env_file:
      - .env
    
    volumes:
      - ./certs:/app/certs:ro
      - ./logs:/app/logs
      - ./config:/app/config:ro
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
        labels: "service=bitquery-kafka,environment=production"

  # Optional: Redis for caching/state
  redis:
    image: redis:7-alpine
    container_name: bitquery-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  # Optional: PostgreSQL for offset management
  postgres:
    image: postgres:15-alpine
    container_name: bitquery-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: bitquery_kafka
      POSTGRES_USER: kafka_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: bitquery-network
